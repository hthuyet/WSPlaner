var translationsEN = {
  
  unscheduledwork: "Unscheduled WorkOrders",
  worksub:"Workorders with subcontractor",
  todaywork:"Today workorders",
  allwork:"All workorders",
  workmot:"Workorders with MOT",
  worktire:"Workorders with tires change",
  workbo:"Workorders with BO parts",
  postponedwork:"Postponed workorders",
  tasklist:"Task list",
  calendarview:"Calendar view",
  stamping:"Stamping",
  offer:"Offers",
  replacementvehicle:"Replacement vehicle planning",
  callcenter:"Call Center",


  workOrderTitle: "WorkOrder Management",
  todayWorkTitle: "Today Work Management",
  allWorkTitle: "All Work Management",
  unscheduledWorkTitle: "Unscheduled Work Management",
  callCenter: "Call Center",
  withSubcontractorTitle: "Workorders With Subcontractor Management",
  withMOTTitle: "Workorder with MOT Management",
  postponedWorkTitle: "Postponed Work Management",
  withTireChangeTitle: "Workorder With Tire Changes Management",
  withBOTitle: "Workorder With BO Parts Management",
  calendarViewTitle: "Calendar View Management",
  taskListTitle: "Task List Management",
  offerTitle: "Offer Management",
  replacementVehicleTitle: " Replacement Vehicle Planning Management",
  newWOTitle: " New Workorder",
  stampingTitle: "Stamping",

  //breadcrumb
  breadcrumbHome: "Home",
  breadcrumbWorkOrder: "WorkOrder",
  breadcrumbTodayWork: "Today Work",
  breadcrumbOffer: "Offer",
  breadcrumbPostponedWO: "Postponed WO",
  breadcrumbUnScheduledWO: "UnScheduled WO",
  breadcrumbWithBO: "With BO",
  breadcrumbWithMOT: "With MOT",
  breadcrumbWithSubcontractor: "With Subcontractor",
  breadcrumbWithTire: "With Tire",
  breadcrumbWorkDetail: "Work Detail",
  breadcrumbWorkNew: "New WorkOrder",
  breadcrumbAllWork: "All Work",
  breadcrumbUnscheduledWork: "Unscheduled Work",
  breadcrumbTodayWork: "Today Work",
  breadcrumbWithSubcontractor: "Workorders With Subcontractor",
  breadcrumbWithMOT: "Workorder with MOT",
  breadcrumbPostponedWork: "Postponed Work",
  breadcrumbWithTire: "Workorder With Tire Changes",
  breadcrumbWithBO: "Workorder With BO parts",
  breadcrumbCalendarView: "Calendar View",
  breadcrumbTaskList: "Task List",
  breadcrumbOffer: "Offer",
  breadcrumbPostponedWO: "Postponed WO",
  breadcrumbUnScheduledWO: "UnScheduled WO",
  breadcrumbWithBO: "With BO",
  breadcrumbWithMOT: "With MOT",
  breadcrumbWithSubcontractor: "With Subcontractor",
  breadcrumbWithTire: "With Tire",
  breadcrumbReplacementVehicle: "Replacement Vehicle Planning",
  breadcrumbNewWO: "New Workorder",
  breadcrumbNewOffer: "New Offer",
  breadcrumbNewBooking: "New Booking",
  breadcrumbNewStamp: "Stamping",


  //common
  btnAdd: "Add",
  btnAddWO: "+WO",
  btnAddOffer: "+Offer",
  btnAddBook: "+Booking",
  btnDelete: "Delete",
  btnRefresh: "Refresh",
  btnMore: "More",
  btnEdit: "Edit",
  btnAction: "Action",
  commonNoResult: "No Results Found",
  btnDeleteItem: "Delete this item",
  btnEditItem: "Edit this item",
  item: "item",
  page: "page",
  go: "Go",
  limit: "Limit",
  btnClose: "Close",
  btnOk: "Ok",
  btnSave: "Save",
  btnCancel: "Cancel",
  search: "Search",
  pleaseEnter: "Please enter here",
  btnClear: "Clear",
  btnSend:"Send",

  //Confirm delete
  confirmDeleteWorkOder: "Are you want to delete this WorkOder?",
  confirmDeletesWorkOder: "Are you want to delete selected WorkOder?",

  //Form
  mechanicDeptId: "DeptId",

  accessDenied: 'Access Denied',
  actionError: 'Action is error.',
  changePasswordFail: 'Change password fail!',
  changePasswordSuccess: 'Change password successfully!',
  currentPasswordWrong: 'Mật khẩu hiện tại không đúng',
  dateTime: 'Date time is invalid. <br>Start time > ended time, please change date time.',
  deleteError: 'Delete error!',
  deleteSuccessfully: 'Delete successfully!.',
  placeholderSelect: '- Select option -',
  recoverPasswordError: 'Recover password error!',
  recoverPasswordSuccess: 'Recover password successfully!',
  requestTimeout: 'Request timeout!',
  requestParamError: 'Request param limit invalid.',
  saveSuccessfully: 'Save successfully.',
  startDateError: "Start date must less than end date",
  success: 'Success!',
  total: ", Total ",
  warning: 'WARNING ',
  saveError: 'Save Error.',
  validatorExisted: "This value is already in use.",
  validatorRequired: "This field is required.",
  validatorEmail: "Please enter a valid email address.",
  validatorUrl: "Please enter a valid URL.",
  validatorDate: "Please enter a valid date.",
  validatorDateISO: "Please enter a valid date (ISO).",
  validatorNumber: "Please enter a valid number.",
  validatorEqualTo: "Please enter the same value again.",
  validatorAccept: "Please enter a value with a valid extension.",
  validatorMaxlength: "Please enter no more than {0} characters.",
  validatorMinlength: "Please enter at least {0} characters.",
  validatorRangelength: "Please enter a value between {0} and {1} characters long.",
  validatorRange: "Please enter a value between {0} and {1}.",
  validatorMax: "Please enter a value less than or equal to {0}.",
  validatorMin: "Please enter a value greater than or equal to {0}.",
  formInvalid: 'Form invalid.',
  invalidNumberIn: 'Value has special characters.',
  invalidNumberBetween: 'From value must less than to value',
  editMechanic: 'Edit mechanic',
  addMechanic: 'Add mechanic',
  trans: 'Transaction Types',
  department: 'Department',
  serv: 'Serv. advisor',
  shiftId: 'Shift ID',
  visitReason: 'Visit reason',
  searchWo: 'Search workorders',
  search: 'Search',
  pleaseSelect: '--Please select--',
  all: '--All--',
  fromDate: 'From date',
  toDate: 'To date',
  myWo: 'Only my workorders',
  WoHeader: 'Workorder Header',
  WoJob: 'Workorder Job',
  ServiceDate: 'ServiceDate',
  ExpectedDelivery: "Expected delivery",
  CheckInDate: 'Check In Time',
  ExecutionDate: 'Execution Time',
  ChargeCats: 'Job Charge Category',
  JobCategory: 'Job Category',
  Payer: 'Payer',
  JobDepartment: 'Job Department',
  JobType: 'Job Type',
  JobTitle: 'Job Title',
  CustomerComplaint: 'Customer complaint',
  BookTireChangeLot: "Book Tire Change Lot",
  BookMOTlot: "Book MOT Lot",
  CustWaiting: "Cust is Waiting",
  Rework: "Rework",
  Mileage: "Current mileage",
  NextMOT: "Next MOT",

  //Contract
  FirstRegistrationDate: "First registration date",
  EngineNumber: "Engine number",

  //Customer
  Address: "Address",
  Phone: "Phone",
  CustomerGroup: "Customer group",
  AccountGroup: "Customer group",

  // Title in Job Tab
  Spare: "Spare Part",
  Labour: "Labour Operation",
  TextRows: " Text Rows",
  SubContractors: "Sub Contractors",
  recentSaleTitle: "Recent sales from this job type",
  JobQuickSelection: "Job Quick Selection",
  SelectedItem: "The Selected Item",
  AdditionalData: "The Additional Data",
  NonStockItems: "Non Stock Items",
  totalTime: "Total Time",
  mechanic: "Resources",
  workload: "Workload",
  previous: "Previous",
  today: "Today",
  next: "Next",
  ConfirmTitle: "Confirm",
  PhotoTitle: "Photo Folder",
  btnPhoto: "Photo",
  btnCam: "Cam",
  btnMark: "All Done",
  //

  // info user
  infoUser: "The User Information",
  email: "Email",
  phone: "Phone",
  restype: "ResType",
  shift: "Shift",
  shortname: "Short Name",
  site: "Site",
  sman: "SmanId",
  subsys: "SubSys",
  checkin: "Check in",
  checkinTemplate: "Template",
  sign: "Signature",
  activeCall: "Active Call",
  recentCall: "Recent Call",
  phoneNumber: "Phone number",
  customerData: "Customer data",
  vehicleData: "Vehicle data",
  recentTrans: "Recent data",

  addBookPool: "Add Book Pool",
  editBookPool: "Edit Book Pool",
  duration: "Duration",
  startTimeBookPool: "Start time",
  endTimeBookPool: "End time",
  addBookResource: "Add book resouce",
  editBookResource: "Edit book resouce",

  //notification
  employee: "Employee",
  message: "Text Message",
  notification: "Notification",
  //tab
  header: "Header",
  job: "Job",
  planning: "Planning",

  call: "Call",
  Customer: "Customer",
  Vehicle: "Vehicle",
  event: "Event",
  Created: "Created",
  CallerId: "CallerId",
  Trunk: "Trunk",
  db: "Db",
  CustomerName: "CustomerName",
  Email: "Email",
  PostalCode: "PostalCode",
  Make: "Make",
  LicenseNo: "LicenseNo",
  NextMOTDate: "NextMOTDate",
  WarrantyInfo: "WarrantyInfo",
  site: "Site",
  subject: "Subject",
  CustomerPhone: "Customer Phone",
  SeriNo: "SeriNo",
  Employee: "Employee",
  TimeSchedule: "TimeSchedule",
  IsClose: "IsClose",
  Text: "Text",
  createTask: "Create new task",
};

var translationsVI = {
  workOrderTitle: "WorkOrder Management",
  todayWorkTitle: "Today Work Management",
  //breadcrumb
  breadcrumbHome: "Home",
  breadcrumbWorkOrder: "WorkOrder",
  breadcrumbTodayWork: "Today Work",
  breadcrumbWorkDetail: "Work Detail",
  breadcrumbWorkNew: "New WorkOrder",

  //common
  // btnAdd: "Thêm mới",
  btnAddWO: "+WO",
  btnAddOffer: "+Offer",
  btnAddBook: "+Booking",
  // btnDelete: "Xóa",
  // btnRefresh: "Tải lại",
  btnMore: "More",
  btnEdit: "Edit",
  btnAction: "Action",
  commonNoResult: "No Results Found",
  btnDeleteItem: "Delete this item",
  btnEditItem: "Edit this item",
  item: "item",
  page: "page",
  go: "Go",
  limit: "Limit",
  btnClose: "Close",
  btnOk: "Ok",
  btnSave: "Save",
  btnCancel: "Cancel",
  search: "Tìm kiếm",
  //Confirm delete
  confirmDeleteWorkOder: "Are you want to delete this WorkOder?",
  confirmDeletesWorkOder: "Are you want to delete selected WorkOder?",

  //Form
  mechanicDeptId: "DeptId",

  accessDenied: 'Access Denied',
  actionError: 'Action is error.',
  changePasswordFail: 'Change password fail!',
  changePasswordSuccess: 'Change password successfully!',
  currentPasswordWrong: 'Mật khẩu hiện tại không đúng',
  dateTime: 'Date time is invalid. <br>Start time > ended time, please change date time.',
  deleteError: 'Delete error!',
  deleteSuccessfully: 'Delete successfully!.',
  placeholderSelect: '- Select option -',
  recoverPasswordError: 'Recover password error!',
  recoverPasswordSuccess: 'Recover password successfully!',
  requestTimeout: 'Request timeout!',
  requestParamError: 'Request param limit invalid.',
  saveSuccessfully: 'Save successfully.',
  startDateError: "Start date must less than end date",
  success: 'Success!',
  total: ", Total ",
  warning: 'WARNING ',
  saveError: 'Save Error.',
  validatorExisted: "This value is already in use.",
  validatorRequired: "This field is required.",
  validatorEmail: "Please enter a valid email address.",
  validatorUrl: "Please enter a valid URL.",
  validatorDate: "Please enter a valid date.",
  validatorDateISO: "Please enter a valid date (ISO).",
  validatorNumber: "Please enter a valid number.",
  validatorEqualTo: "Please enter the same value again.",
  validatorAccept: "Please enter a value with a valid extension.",
  validatorMaxlength: "Please enter no more than {0} characters.",
  validatorMinlength: "Please enter at least {0} characters.",
  validatorRangelength: "Please enter a value between {0} and {1} characters long.",
  validatorRange: "Please enter a value between {0} and {1}.",
  validatorMax: "Please enter a value less than or equal to {0}.",
  validatorMin: "Please enter a value greater than or equal to {0}.",
  formInvalid: 'Form invalid.',
  invalidNumberIn: 'Value has special characters.',
  invalidNumberBetween: 'From value must less than to value',
  editMechanic: 'Edit mechanic',
  addMechanic: 'Add mechanic',
  trans: 'Transaction Types',
  department: 'Department',
  serv: 'Serv. advisor',
  shiftId: 'Shift ID',
  visitReason: 'Visit reason',
  searchWo: 'Search workorders',
  pleaseSelect: '--Please select--',
  all: '--All--',
  fromDate: 'From date',
  toDate: 'To date',
  myWo: 'Only my workorders',
  WoHeader: 'Workorder Header',
  WoJob: 'Workorder Job',
  ServiceDate: 'Service Date',
  ExpectedDelivery: "Expected delivery",
  CheckInDate: 'Check In Time',
  ExecutionDate: 'Execution Time',
  ChargeCats: 'Job Charge Category',
  JobCategory: 'Job Category',
  Payer: 'Payer',
  JobDepartment: 'Job Department',
  JobType: 'Job Type',
  JobTitle: 'Job Title',
  CustomerComplaint: 'Customer complaint',
  BookTireChangeLot: "Book Tire Change Lot",
  BookMOTlot: "Book MOT Lot",
  CustWaiting: "Cust is Waiting",
  Rework: "Rework",
  Mileage: "Current mileage",
  NextMOT: "Next MOT",

  //Contract
  FirstRegistrationDate: "First registration date",
  EngineNumber: "Engine number",

  //Customer
  Address: "Address",
  Phone: "Phone",
  CustomerGroup: "Customer group",
  AccountGroup: "Customer group",

  // Title in Job Tab
  Spare: "Spare Part",
  Labour: "Labour Operation",
  TextRows: " Text Rows",
  SubContractors: "Sub Contractors",
  recentSaleTitle: "Recent sales from this job type",
  JobQuickSelection: "Job Quick Selection",
  SelectedItem: "The Selected Item",
  AdditionalData: "The Additional Data",
  NonStockItems: "Non Stock Items",
  totalTime: "Tổng thời gian",
  mechanic: "Resource",
  workload: "Workload",
  previous: "Previous",
  today: "Today",
  next: "Next",
  //

  // info user
  infoUser: "The User Information",
  email: "Email",
  phone: "Phone",
  restype: "ResType",
  shift: "Shift",
  shortname: "Short Name",
  site: "Site",
  sman: "SmanId",
  subsys: "SubSys",
  checkin: "Check in",
  checkinTemplate: "Template",
  sign: "Signature",
  callCenter: "Call Center",
  activeCall: "Active Call",
  recentCall: "Recent Call",

  phoneNumber: "Phone number",
  customerData: "Customer data",
  vehicleData: "Vehicle data",
  recentTrans: "Recent data",

  addBookPool: "Add Book Pool",
  editBookPool: "Edit Book Pool",
  startTimeBookPool: "Start time",
  endTimeBookPool: "End time",
  addBookResource: "Add book resource",
  editBookResource: "Edit book resource",
  duration: "Duration",

  call: "Call",
  Customer: "Customer",
  Vehicle: "Vehicle",
  event: "Event",
  Created: "Created",
  CallerId: "CallerId",
  Trunk: "Trunk",
  db: "Db",
  CustomerName: "CustomerName",
  Email: "Email",
  PostalCode: "PostalCode",
  Make: "Make",
  LicenseNo: "LicenseNo",
  NextMOTDate: "NextMOTDate",
  WarrantyInfo: "WarrantyInfo",
  site: "Site",
  subject: "Subject",
  CustomerPhone: "Customer Phone",
  SeriNo: "SeriNo",
  Employee: "Employee",
  TimeSchedule: "TimeSchedule",
  IsClose: "IsClose",
  Text: "Text",
  createTask: "Create new task",
};

UserWebApp.config(['$translateProvider', function ($translateProvider) {
  // Declare multi language
  $translateProvider.translations('en', translationsEN);
  $translateProvider.translations('vi', translationsVI);
  $translateProvider.translations('de', translationsVI);

  // Get current language
  var currentLang = $('.currentLang').attr('data-currentLang');
  currentLang = currentLang && currentLang !== '' ? currentLang : 'en';

  // Set language
  $translateProvider.fallbackLanguage("en");
  $translateProvider.preferredLanguage(currentLang);
}]);